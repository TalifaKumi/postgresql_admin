
SELECT s4.current_db,s4.schema, s4.tblname, s4.real_size
        ,pg_size_pretty(s4.real_size::numeric) as "real_size_pr"
        ,pg_size_pretty(s4.extra_size::numeric) as "extra_size_pr"
        ,s4.extra_pct, s4.fillfactor
        ,pg_size_pretty(s4.bloat_size::numeric) as "bloat_size_pr"
        ,s4.bloat_pct
        ,s4.is_na
        FROM (SELECT current_database() as "current_db",
                      schemaname as "schema",
                      tblname,
                      bs * tblpages                  AS real_size,
                      (tblpages - est_tblpages) * bs AS extra_size,
                      CASE
                          WHEN tblpages - est_tblpages > 0
                              THEN round((100 * (tblpages - est_tblpages) / tblpages::float)::numeric, 2)
                          ELSE 0
                          END                        AS extra_pct,
                      fillfactor,
                      CASE
                          WHEN tblpages - est_tblpages_ff > 0
                              THEN (tblpages - est_tblpages_ff) * bs
                          ELSE 0
                          END                        AS bloat_size,
                      CASE
                          WHEN tblpages - est_tblpages_ff > 0
                              THEN round((100 * (tblpages - est_tblpages_ff) / tblpages::float)::numeric,2)
                          ELSE 0
                          END                        AS bloat_pct,
                      is_na
                      -- , tpl_hdr_size, tpl_data_size, (pst).free_percent + (pst).dead_tuple_percent AS real_frag -- (DEBUG INFO)
              FROM (SELECT ceil(reltuples / ((bs - page_hdr) / tpl_size)) + ceil(toasttuples / 4) AS est_tblpages,
                            ceil(reltuples / ((bs - page_hdr) * fillfactor / (tpl_size * 100))) +
                            ceil(toasttuples / 4)                                                  AS est_tblpages_ff,
                            tblpages,
                            fillfactor,
                            bs,
                            tblid,
                            schemaname,
                            tblname,
                            heappages,
                            toastpages,
                            is_na
                            -- , tpl_hdr_size, tpl_data_size, pgstattuple(tblid) AS pst -- (DEBUG INFO)
                     FROM (SELECT (4 + tpl_hdr_size + tpl_data_size + (2 * ma)
                         - CASE WHEN tpl_hdr_size % ma = 0 THEN ma ELSE tpl_hdr_size % ma END
                         - CASE WHEN ceil(tpl_data_size)::int % ma = 0 THEN ma ELSE ceil(tpl_data_size)::int % ma END
                                      )                    AS tpl_size,
                                  bs - page_hdr            AS size_per_block,
                                  (heappages + toastpages) AS tblpages,
                                  heappages,
                                  toastpages,
                                  reltuples,
                                  toasttuples,
                                  bs,
                                  page_hdr,
                                  tblid,
                                  schemaname,
                                  tblname,
                                  fillfactor,
                                  is_na
                                  -- , tpl_hdr_size, tpl_data_size
 
